#!/usr/bin/env zsh
#
# remote control 
#

runname=`basename $0`

ngrok_set_linux () {
    curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null &&  echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list && sudo apt update && sudo apt install ngrok
}

ngrok_token () {
    ngrok authtoken $1
}

case $runname in
    fatavay)
        fat1ip="192.168.10.10"
        fat2ip="192.168.10.20"
        fat3ip="192.168.10.30"
        fat4ip="192.168.10.40"
        fat5ip="192.168.10.50"
        
        fat1="f1@$fat1ip"
        fat2="f1@$fat2ip"
        fat3="f1@$fat3ip"
        fat4="f1@$fat4ip"
        fat5="f1@$fat5ip"
        safer="safer@$fat5ip"

        port=22
    ;;
    ngrok)
        ngfatip="0.tcp.ngrok.io"
        port=17777
        
        ngrok_ini () {
            nohup ngrok tcp 22 --log=stdout > "$HOME/.ngrok2/ngrok.log" --region ap &
        }

        ngfat () {
            user=$1
            port=$2
            ssh -X -Y ${user}@${ngfatip} -p${port}
        }

        alias ngdcm='ngfat dcm $port'
    ;;
esac

cpfat () {
    case $1 in
        "1")
            fat=$fat1
            ;;
        "2")
            fat=$fat2
            ;;
        "3")
            fat=$fat3
            ;;
        "4")
            fat=$fat4
            ;;
        "5")
            fat=$fat5
            ;;
        "s")
            fat=$safer
            ;;
        ng)
            fat=dcm@0.tcp.ap.ngrok.io
            ;;
    esac
    
    scp -P $port $2 $fat:~/.
}

shfat () {
    if [[ $1 == 1 ]]; then fat=$fat1; fi
    if [[ $1 == 2 ]]; then fat=$fat2; fi
    if [[ $1 == 3 ]]; then fat=$fat3; fi
    if [[ $1 == 4 ]]; then fat=$fat4; fi
    if [[ $1 == 5 ]]; then fat=$fat5; fi
    if [[ $1 == 's' ]]; then fat=$safer; fi
    
    cpfat $1 ~/.zshrc
    ssh -X -Y $fat
}

upfat () {
    tar zcvf xxx.tgz $1
    cpfat $2 ./xxx.tgz
    rm xxx.tgz
}
