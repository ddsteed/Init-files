#!/usr/bin/env   zsh

#-----------------------------------------------------------------------
# This script is to operate HomeBrew system.
#
# Author:    Hao Feng (F1)
#
# Init Date: Mar. 13, 2019
# Last Date: Jun. 24, 2025
#
# Copyright (c) 2019-, RDS
#-----------------------------------------------------------------------

runname=`basename $0`

#- update/upgrade all apps
brewup () {
#   brew update && brew upgrade && brew cu -a -y && /opt/homebrew/bin/mas upgrade
    echo
    echo "update homebrew ..."
    echo "----------------------------"
    brew update 

    echo
    echo "upgrade all apps ... "
    echo "----------------------------"

    brew upgrade 

    echo
    echo "upgrade all cask apps ... "
    echo "----------------------------"

    brew cu -a -f -y 

    echo
    echo "upgrade all mac apps ... "
    echo "----------------------------"

    /opt/homebrew/bin/mas upgrade
}

#- install app
bin () {
    opt=
    if [[ $2 == "cask" || $2 == "c" ]]; then
        opt="--cask"
    else
        opt="--force-bottle"
    fi

    brew install $1 -v --force $opt
}

brin () {
    opt=
    if [[ $2 == "cask" || $2 == "c" ]]; then
        opt="--cask"
    fi

    brew reinstall $1 -v --force $opt
}

#- upgrade app
bup () {
    brew upgrade $1 -v
}

#- uninstall app
bun () {
    brew uninstall $1 -v
    # brew rmtree $1
}

brm () {
    brew rmtree $1
}

#- backup all brew apps
brewbk () {
    echo "backup brew apps ... "
    echo "----------------"
    echo
    brew bundle dump --file=~/.backup/Brewfile -f
}

#- restore all brew apps from backup file
brewrt () {
    echo "restore brew apps ... "
    echo "-----------------"
    echo
    brew bundle --file=~/.backup/Brewfile --force
}

#---
# brew system operations

brewinstall () {
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
}

brewuninstall () {
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/uninstall.sh)"
}

brewrm () {
    brew ls --$1 | xargs brew remove -f --ignore-dependencies
}

#- reset official source
brewreset () {
    unset HOMEBREW_BREW_GIT_REMOTE
    rm ~/.zprofile

    case $1 in
        ustc)
            git -C "$(brew --repo)" remote set-url origin https://mirrors.ustc.edu.cn/brew.git
            echo 'export HOMEBREW_BREW_GIT_REMOTE="https://mirrors.ustc.edu.cn/brew.git"' >! ~/.zprofile
            echo 'export HOMEBREW_API_DOMAIN="https://mirrors.ustc.edu.cn/homebrew-bottles/api"' >> ~/.zprofile 
            echo 'export HOMEBREW_BOTTLE_DOMAIN="https://mirrors.ustc.edu.cn/homebrew-bottles/bottles"' >> ~/.zprofile 
            ;;
        official | *)
            git -C "$(brew --repo)" remote set-url origin https://github.com/Homebrew/brew
            ;;
    esac

    echo 'eval "$(/opt/homebrew/bin/brew shellenv)" ' >> ~/.zprofile
}

#---
#- brew 安装常用的软件
# 添加第三方库
brewtap () {
    taps=(buo/cask-upgrade langgenius/dify beeftornado/rmtree mongodb/brew)

    case $1 in
        u)
            run=untap
            ;;
        *)
            run=tap
            ;;
    esac

    for ap in $taps; do
        brew $run $ap
    done
}

brewapp () {
    #-   先准备第三方库
    brewtap
    
    #-   命令行
    apps=(aider aspell autoconf autojump automake bat blueutil brew-rmtree btop
          cmake coreutils cowsay difftastic dify duf duti epr eza ffmpeg fortune
          gcc git git-imerge gpg hugo jj libtool localai
          macchina macmon mactop mas mongodb-community mysql
          ncdu ngrok ollama pandoc redis sleepwatcher sqlite tmux tree-sitter
          uv vim wget yazi youtubedr yt-dlp
         )

    #-   图形界面
    appc=(alfred appcleaner arc baidunetdisk bean betterdisplay
          calibre cherry-studio clash-verge-rev cursor docker-desktop drawio
          easydict eclipse-ide emacs-app feishu fork gimp google-chrome
          hammerspoon handbrake-app hiddenbar homerow iina iterm2
          karabiner-elements lyricsx
          macdown mactex maczip mendeley-reference-manager miniforge
          namechanger neo4j-desktop netnewswire nimble-commander
          obsidian ollama onyx orbstack rectangle shottr squirrel-app superwhisper
          tencent-meeting thunder trae visual-studio-code wechat wechatwork wine-stable
          wljs-notebook wolfram-engine
         )

    case $1 in
        c)
            app=($appc)
            run="install"
            opt="--cask"
            ;;
        rc)
            app=($appc)
            run="reinstall"
            opt="--cask"
            ;;
        r)
            app=($apps)
            run="reinstall"
            opt=
            ;;
        *)
            app=($apps)
            run="install"
            opt=
            ;;
    esac 

    echo 
    echo "$#app apps $opt will be installed ... "
    echo "-----------------------------"
    echo 
    brew $run $app --force -v $opt
}

#-------------------------------------------
