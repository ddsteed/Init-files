#!/usr/bin/env  zsh
#
#-----------------------------------------------------------------------
# This script is to update all Mac/Linux softwares
#
# Author: Hao Feng (F1)
# Date:   Mar. 13, 2022
#
# Copyright (c) 2022, RDS
#-----------------------------------------------------------------------

# since 'update' is called usually through 'ini update', passed parameter
# is listed as 2nd order.
# If you call 'update' directly, $2 should be changed as $1.
# (I have no time to fix the parameters order.)

if [[ $2 == "" ]]; then
    if [[ `uname` == "Darwin" ]]; then
        update=(mac abrew ibrew ai mforge mbforge mconda aconda)
    elif [[ `uname` == "Linux" ]]; then
        update=(apt)
    fi
else
    update=($2)
fi

echoline () {
    echo "--------------------------------------------------"
}
    
function printc_d {
    bg=44
    fg=37
    txt=$1
    echo -e "\033[${bg};${fg}m${txt}\033[0m"
}

function print_welcome () {
    printc_d "-----------------------------------------------------"
    printc_d " This script is to update all Mac/Linux Softwares    "
    printc_d "                                                     "
    printc_d " Author: Hao Feng (F1)                               "
    printc_d "                                                     "
    printc_d " Copyright (c) 2022, RDS                             "
    printc_d "                                                     "
    printc_d "-----------------------------------------------------"
    echo
    echo     "  The following packages will be updated ...      "
    echo
    echo     "   ${update[@]} "
    echo    
    printc_d "-----------------------------------------------------"
}

print_welcome

num=0
total=${#update[@]}

for mission in ${update[@]}; do
    let num++
    echo
    # echoline
    printc_d "[$num/$total]: $mission  "

    case $mission in
        mac)
            printc_d " Updating Mac OS system & softwares ... "
            echo
            
            softwareupdate --all --install --force
            ;;
        abrew | ibrew)
            source  ~/Init/$mission
            printc_d " Updating Homebrew ($mission) applications ... "
            echo
            echo     "   *  BREW HOME: $HOMEBREW_REPOSITORY"
            echo

            brewup
            brew cleanup
            ;;
        mbforge | mforge | aconda | mconda | ai)
            source ~/Init/$mission

            printc_d " Updating $condaenv ... "
            echo

            condaup
            if [[ $mission == aconda ]]; then acondaup; fi
            conda clean --all --yes
            ;;
        apt)
            printc_d " Updating Ubuntu Linux apt softwares ... "
            echo

            sudo apt-get update -y && sudo apt-get upgrade -y
            sudo apt-get autoremove -y
            ;;
        *)
            printc_d " $mission is NOT in the update lists ..."
            echo
            ;;
    esac
done
